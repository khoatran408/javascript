/* We'll pass you an array of two numbers. 
Return the sum of those two numbers plus the sum of all the numbers between them.
The lowest number will not always come first.
*/
function sumAll(arr) {
  let newArr = arr.sort((a,b) => a-b);
  let sum= 0;
  for (let i=newArr[0]; i < newArr[1]+1;i++){
    sum += i;
   }
  return sum;
}

/*Compare two arrays and return a new array with any items only found in one of the two given arrays, but not both. 
In other words, return the symmetric difference of the two arrays.
*/
function diffArray(arr1, arr2) {
  let leftArr = arr1.filter(x => !arr2.includes(x));
  let rightArr = arr2.filter(x => !arr1.includes(x));
  return rightArr.concat(leftArr);
}

/*Convert a string to spinal case. Spinal case is all-lowercase-words-joined-by-dashes.
*/
function spinalCase(str) {
  // "It's such a fine line between stupid, and clever."
  // --David St. Hubbins
  return str.split(/\W|_|(?=[A-Z])/).join('-').toLowerCase();
}

/* Translate the provided string to pig latin.
Pig Latin takes the first consonant (or consonant cluster) of an English word, moves it to the end of the word and suffixes an "ay".
If a word begins with a vowel you just add "way" to the end.
Input strings are guaranteed to be English words in all lowercase.
*/
///////////////////////////////////still not working ..Should handle words where the first vowel comes in the end of the word.
function translatePigLatin(str) {
  if (str[0].match(/[aeiou]/)){
    return str+'way';
  } else {
    let secondStr = str.split(/^[bcdfghjklmnprqstvxyz]+/);
    let firstStr = str.replace(secondStr[1],'');
  return secondStr[1]+firstStr+'ay';
  //return firstStr;
  }
}
console.clear();
console.log(
translatePigLatin("oop"));
